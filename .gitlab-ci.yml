stages:
  - test
  - deploy

test-backend:
  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Official framework image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/php
  image: bitnami/laravel:latest

  # Pick zero or more services to be used on all builds.
  # Only needed when using a docker container to run your tests in.
  # Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
  services:
    - mysql:latest

  variables:
    MYSQL_DATABASE: ds_main
    MYSQL_ROOT_PASSWORD: secret

  # This folder is cached between builds
  # http://docs.gitlab.com/ee/ci/yaml/README.html#cache
  cache:
    paths:
      - vendor/
      - node_modules/

  # This is a basic example for a gem or script which doesn't use
  # services such as redis or postgres
  script:
    # Update packages
    - apt-get update -yqq
    # Install Composer and project dependencies.
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    - cp .env.ci .env
    # Generate an application key. Re-cache.
    - php artisan key:generate
    - php artisan config:cache
    # Run database migrations.
    - php artisan migrate
    # Run database seed
    - php artisan db:seed
    - php vendor/bin/phpunit --coverage-text

deploy_production:
  stage: deploy
  script:
    - echo 'test'
  environment:
    name: production
    url: http://192.168.1.1
  when: manual
  only:
    - master
